<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <IsPackable>false</IsPackable>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="coverlet.collector" Version="6.0.2" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.12.0" />
    <PackageReference Include="xunit" Version="2.9.2" />
    <PackageReference Include="xunit.runner.visualstudio" Version="3.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <Using Include="Xunit" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="images\" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\src\RandomFourierFeaturesSharp\RandomFourierFeaturesSharp.csproj" />
  </ItemGroup>

  <ItemGroup>
    <None Update="images\cat.jpg">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  
  <!-- Choose the appropriate TorchSharp bundle with libtorch runtime for our current OS and environment -->
  <ItemGroup Condition="'$(TESTGPU)' == 'true' AND $([MSBuild]::IsOsPlatform(Linux))">
    <PackageReference Include="TorchSharp-cuda-linux" Version="$(TorchSharpVersion)" />
  </ItemGroup>

  <ItemGroup Condition="'$(TESTGPU)' == 'true' AND $([MSBuild]::IsOsPlatform(Windows))">
    <PackageReference Include="TorchSharp-cuda-windows" Version="$(TorchSharpVersion)" />
  </ItemGroup>

  <ItemGroup Condition="'$(TESTGPU)' != 'true'">
    <PackageReference Include="TorchSharp-cpu" Version="$(TorchSharpVersion)" />
  </ItemGroup>

</Project>
